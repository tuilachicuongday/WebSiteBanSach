@using BanSach.Web.Code
@model ShopViewModel
@{
    ViewBag.Title = "Index";
}
<div class="page-title parallax parallax1">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="page-title-heading">
                    <h1 class="title">Shop</h1>
                </div><!-- /.page-title-heading -->
            </div><!-- /.col-md-12 -->
        </div><!-- /.row -->
    </div><!-- /.container -->
</div><!-- /.page-title -->

<section class="flat-row main-shop shop-slidebar">
    <div class="container">
        <div class="row">
            <div class="col-md-3">
                <div class="sidebar slidebar-shop">
                    <div class="widget widget-search">
                        <form role="search" method="get" class="search-form" action="@Url.Action("Index","Shop")">
                            <label>
                                <input type="search" class="search-field" placeholder="Search …" value="@Model.Search" name="search">
                            </label>
                            <input type="submit" class="search-submit" value="Search">
                        </form>
                    </div><!-- /.widget-search -->
                    <div class="widget widget-sort-by">
                        <h5 class="widget-title">
                            Sort By
                        </h5>
                        <ul>
                            <li><a data-href="@Url.Action("FilterBooks","Shop", new {sortBy = (int)SortByEnum.Default, categoryID = Model.CategoryID})" class="dataLink @(Model.SortBy.HasValue ? Model.SortBy.Value == (int)SortByEnum.Default ? "active" : string.Empty : string.Empty)">Defaul-Newness</a></li>
                            <li><a data-href="@Url.Action("FilterBooks","Shop", new {sortBy = (int)SortByEnum.Popularity, categoryID = Model.CategoryID})" class="dataLink @(Model.SortBy.HasValue ? Model.SortBy.Value == (int)SortByEnum.Popularity ? "active" : string.Empty : string.Empty)">Popularity</a></li>
                            <li><a data-href="@Url.Action("FilterBooks","Shop", new {sortBy = (int)SortByEnum.PriceLowToHigh, categoryID = Model.CategoryID})" class="dataLink @(Model.SortBy.HasValue ? Model.SortBy.Value == (int)SortByEnum.PriceLowToHigh ? "active" : string.Empty : string.Empty)">Price: low to high</a></li>
                            <li><a data-href="@Url.Action("FilterBooks","Shop", new {sortBy = (int)SortByEnum.PriceHighToLow, categoryID = Model.CategoryID})" class="dataLink @(Model.SortBy.HasValue ? Model.SortBy.Value == (int)SortByEnum.PriceHighToLow ? "active" : string.Empty : string.Empty)">Price: high to low</a></li>
                        </ul>
                    </div><!-- /.widget-sort-by -->
                    <div class="widget widget-price">
                        <h5 class="widget-title">Filter by price</h5>
                        <div class="price-filter">
                            <div id="slide-range"></div>
                            <p class="amount">
                                Price: <input type="text" id="amount" disabled="">
                            </p>
                        </div>
                    </div>
                    <div class="widget widget_tag">
                        <h5 class="widget-title">
                            Tags
                        </h5>
                        <div class="tag-list">
                            @foreach (var category in Model.FeatureCategory)
                            {
                                <a data-href="@Url.Action("FilterBooks", "Shop", new {categoryID = category.ID, sortBy = Model.SortBy})" class="dataLink @(Model.CategoryID.HasValue && Model.CategoryID.Value == category.ID ? "active" : string.Empty)">@category.Name</a>

                            }
                        </div>
                    </div><!-- /.widget -->
                    <a href="@Url.Action("Index","Shop")" class="btn btn-danger">Reset Filter</a>
                </div><!-- /.sidebar -->
            </div><!-- /.col-md-3 -->

            <div class="col-md-9">
                <div id="booksDiv">
                    @{
                        var filterProductsViewModel = new FilterProductsViewModel();
                        filterProductsViewModel.Books = Model.Books;
                        filterProductsViewModel.Pager = Model.Pager;
                        filterProductsViewModel.CategoryID = Model.CategoryID;
                        filterProductsViewModel.SortBy = Model.SortBy;

                        Html.RenderPartial("FilterBooks", filterProductsViewModel);

                    }
                </div>
            </div><!-- /.col-md-9 -->
        </div><!-- /.row -->
    </div><!-- /.container -->
</section><!-- /.flat-row -->
<script>
    var callTimeout;

    var priceSlider = $("#slide-range").slider({
        range: true,
        min: 0,
        max: @Model.MaximumPrice,
        values: [0, @Model.MaximumPrice],
        slide: function (event, ui) {
            var minPrice = ui.values[0];
            var maxPrice = ui.values[1];
            $("#amount").val("$" + minPrice + ".00" + " - " + "$" + maxPrice + ".00");
            clearTimeout(callTimeout);
            callTimeout = setTimeout(PriceRangeChange, 500);
        }
    });
    $(".dataLink").click(function () {
        var url = $(this).attr("data-href");

        if (url != "" || url != undefined) {
            GetData(url);
        }
    });
    function GetData(dUrl) {
        showLoader();
        $.ajax({
            url: dUrl,
            data: {
                search: $("#Search").val(),
                sortBy: $("#SortBy").val(),
                categoryID: $("#CategoryID").val(),
                minimumPrice: priceSlider.slider("values",0),
                maximumPrice: priceSlider.slider("values", 1)
            }
        })
            .done(function (response) {
                $('#booksDiv').html(response);
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("Fail")
            })
            .always(function () {
                hideLoader();
            });
    }
    function PriceRangeChange(){
		$.ajax({
			url: '@Url.Action("FilterBooks", "Shop")',
			data: {
				search: $("#Search").val(),
				sortBy: $("#SortBy").val(),
				categoryID: $("#CategoryID").val(),
				minimumPrice : priceSlider.slider("values", 0),
				maximumPrice : priceSlider.slider("values", 1)
			}
		})
        .done(function (response) {
            $("#booksDiv").html(response);
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
        	alert("FAIL");
        });
	}
</script>